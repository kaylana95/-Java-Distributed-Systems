Client Side Implementation
// Java program to illustrate Client Side Programming 
// for Simple Calculator using TCP 
import java.io.DataInputStream; 
import java.io.DataOutputStream; 
import java.io.IOException; 
import java.net.InetAddress; 
import java.net.Socket; 
import java.net.UnknownHostException; 
import java.util.Scanner; 
  
public class Calc_Client 
{ 
    public static void main(String[] args) throws IOException 
    { 
        InetAddress ip = InetAddress.getLocalHost(); 
        int port = 4444; 
        Scanner sc = new Scanner(System.in); 
  
        // Step 1: Open the socket connection. 
        Socket s = new Socket(ip, port); 
  
        // Step 2: Communication-get the input and output stream 
        DataInputStream dis = new DataInputStream(s.getInputStream()); 
        DataOutputStream dos = new DataOutputStream(s.getOutputStream()); 
  
        while (true) 
        { 
            // Enter the equation in the form- 
            // "operand1 operation operand2" 
            System.out.print("Enter the equation in the form: "); 
            System.out.println("'operand operator operand'"); 
  
            String inp = sc.nextLine(); 
  
            if (inp.equals("bye")) 
                break; 
  
            // send the equation to server 
            dos.writeUTF(inp); 
  
            // wait till request is processed and sent back to client 
            String ans = dis.readUTF(); 
            System.out.println("Answer=" + ans); 
        } 
    } 
} 

Server Side Implementation


// Java program to illustrate Server Side Programming 
// for Simple Calculator using TCP 
import java.io.DataInputStream; 
import java.io.DataOutputStream; 
import java.io.IOException; 
import java.net.ServerSocket; 
import java.net.Socket; 
import java.util.StringTokenizer; 
  
public class Calc_Server 
{ 
    public static void main(String args[]) throws IOException 
    { 
  
        // Step 1: Establish the socket connection. 
        ServerSocket ss = new ServerSocket(4444); 
        Socket s = ss.accept(); 
  
        // Step 2: Processing the request. 
        DataInputStream dis = new DataInputStream(s.getInputStream()); 
        DataOutputStream dos = new DataOutputStream(s.getOutputStream()); 
  
        while (true) 
        { 
            // wait for input 
            String input = dis.readUTF(); 
  
            if(input.equals("bye")) 
                break; 
  
            System.out.println("Equation received:-" + input); 
            int result; 
  
            // Use StringTokenizer to break the equation into operand and 
            // operation 
            StringTokenizer st = new StringTokenizer(input); 
  
            int oprnd1 = Integer.parseInt(st.nextToken()); 
            String operation = st.nextToken(); 
            int oprnd2 = Integer.parseInt(st.nextToken()); 
  
            // perform the required operation. 
            if (operation.equals("+")) 
            { 
                result = oprnd1 + oprnd2; 
            } 
  
            else if (operation.equals("-")) 
            { 
                result = oprnd1 - oprnd2; 
            } 
            else if (operation.equals("*")) 
            { 
                result = oprnd1 * oprnd2; 
            } 
            else
            { 
                result = oprnd1 / oprnd2; 
            } 
            System.out.println("Sending the result..."); 
  
            // send the result back to the client. 
            dos.writeUTF(Integer.toString(result)); 
        } 
    } 
}